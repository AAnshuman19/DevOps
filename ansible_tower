Ansible Tower 

The control plane for Ansible Automation Platform (replacing Ansible Tower) is the automation controller .   It includes : - 
1. a user interface (UI),  
2. role-based access control (RBAC), 
3. workflows, and 
4. continuous integration and continuous delivery (CI/CD).

Note: Automation controller is the control plane for  Ansible Automation Platform. You will upgrade Ansible Tower to automation controller when migrating to Ansible Automation Platform 2. 

Ansible Tower will be supported through November 2022, with resources available in Red Hat Customer Portal.


Use Cases :

* Configuration Management — Configuration Management -   1. Ansible understands how to transform it to the desired state (and also supports a "dry run" mode to preview needed changes). Secure and agent-less 
* App Deployment 
* Continuous Delivery
* Security Automation
* Cloud Automation
* Orchestration
* Endpoint Protection


Benefits:  
1. Job scheduling: schedule your jobs and set repetition options 
￼
2.  Role-based access control: you can set up teams and users in various roles. These can integrate with your existing LDAP or AD environment.
3. Portal mode: this is a simplified view of automation jobs for newbies and less experienced Ansible users. This is an excellent feature as it truly lowers the entry barriers to starting to use Ansible.
4. Fully documented REST API: allows you to integrate Ansible into your existing toolset and environment
5. Tower Dashboard: use this to quickly view a summary of your entire environment. Simplifies things for sysadmins while sipping their coffee.
6. Integration - Tower is compatible with the major : — 
        1. cloud environments: Amazon & GCP
        2. Security : Splunk, Check Point, Cyber Ark, Palo Alto
        3. Infrastructure : Service Now, & Windows
        4. Tools : Atlassian             
        5.    
Power of the playbooks
REPEATABLE & RELIABLE
Ansible allows you to write 'Playbooks' that are descriptions of the desired state of your systems, Ansible then does the hard work of getting your systems to that state no matter what state they are currently in.  Playbooks make your installations, upgrades and day-to-day management repeatable and reliable.
NO AGENT = MORE SECURE, MORE PERFORMANCE, LESS EFFORT
Thanks to its agentless design, Ansible can be introduced into your environment without any bootstrapping of remote systems or opening up additional ports. Not only does this eliminate "managing the management," but system resource utilization is also dramatically improved.
1. 
￼
Super flexible
Downloading artifacts from servers and configuring the OS are just the basics.  Talk to REST APIs, update a team chat server with a heads up, or send an email - Ansible can drive all kinds of workflows.
Cloud ready
Included modules manage not just the local computer system, but can interact with cloud services including Amazon AWS, Google GCP  and more. And since all cloud APIs allow you to trivially inject SSH keys, you can start managing any cloud instance or network software without modifying the base image.


To Use Ansible Tower effectively -  As User - https://docs.ansible.com/ansible-tower/latest/html/userguide/index.html
Administrative Part — https://docs.ansible.com/ansible-tower/latest/html/administration/index.html
Usability Analytics  —  
￼

Ansible Tower API - https://docs.ansible.com/ansible-tower/latest/html/towerapi/index.html
REST APIs provide access to resources (data entities) via URI paths. You can visit the Ansible Tower REST API in a web browser at: http://<Tower server name>/api/
 
￼

